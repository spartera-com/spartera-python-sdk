# coding: utf-8

"""
    Spartera API Documentation

    Auto-generated API documentation for REST services of the Spartera platform

    The version of the OpenAPI document: 0.0.0
    Contact: support@spartera.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spartera_api_sdk.models.asset import Asset

class TestAsset(unittest.TestCase):
    """Asset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Asset:
        """Test Asset
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Asset`
        """
        model = Asset()
        if include_optional:
            return Asset(
                asset_id = '',
                user_id = '',
                company_id = '',
                connection_id = '',
                llm_connection_id = '',
                snippet_id = '',
                industry_id = '',
                ai_job_id = '',
                approval_status = '',
                approved_by_user_id = '',
                approved_at = '',
                name = '',
                slug = '',
                description = '',
                source = '',
                asset_type = '',
                asset_schema = '',
                visibility = '',
                tags = '',
                sql_logic = '',
                source_schema_name = '',
                source_table_name = '',
                sell_in_marketplace = '',
                viz_chart_library = '',
                viz_chart_type = '',
                viz_dep_var_col_name = '',
                viz_indep_var_col_name = '',
                viz_size_col_name = '',
                viz_color_col_name = '',
                viz_data_aggregation = '',
                viz_sort_direction = '',
                viz_data_limit = '',
                viz_color_scheme = '',
                allow_params = '',
                accept_terms = '',
                cached = '',
                schedule = '',
                next_run = '',
                data_time_period_start = '',
                data_time_period_end = '',
                geographic_coverage_type = '',
                geographic_coverage_details = '',
                data_source_refresh_frequency = '',
                data_source_last_refreshed = '',
                date_created = '',
                last_updated = '',
                active = ''
            )
        else:
            return Asset(
                company_id = '',
                name = '',
                source = '',
        )
        """

    def testAsset(self):
        """Test Asset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
